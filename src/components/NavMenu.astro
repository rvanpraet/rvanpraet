---
import type { HTMLAttributes } from 'astro/types'
import NavLink, { type LinkProps } from './NavLink.astro'
import { twMerge } from 'tailwind-merge'

interface Props extends HTMLAttributes<'nav'> {
  links?: LinkProps[]
}

const { class: className, links = [] } = Astro.props

const classes = twMerge('fixed w-full left-0 z-40 flex justify-center show', className)
---

<nav class={classes}>
  <div class="navigation-wrapper flex justify-end items-center w-full gap-8 pl-2 py-2 lg:py-1 lg:pl-4">
    <!-- <div class=""><p class="text-base lg:text-sm font-extralight">reinald van praet</p></div> -->
    {
      links && links.length > 0 && (
        <div class="flex items-center">
          {links.map(({ text, ...linkProps }) => (
            <NavLink {...linkProps}>{text}</NavLink>
          ))}
        </div>
      )
    }
  </div>
</nav>

<script>
  import { debounce } from '@/webgl/helpers'

  // Hide nav menu while scrolling down, show it when scrolling up
  window.addEventListener('wheel', (e) => {
    let isNavVisible = false
    const nav = document.querySelector('nav')
    // nav.classList.remove('show')
    const { deltaY } = e

    if (deltaY > 0.25) {
      // Scrolling down
      isNavVisible = false
      nav.classList.remove('show')
    } else {
      // Scrolling up
      isNavVisible = true
      nav.classList.add('show')
    }

    debounce(() => {
      if (!isNavVisible) {
        nav.classList.add('show')
      }
    }, 2000)
  })
</script>

<style lang="scss">
  nav {
    top: -40px;
    transition: top 0.35s ease-in-out;
    @media screen and (min-width: var(--breakpoint-md)) {
      top: -32px;
    }
    &.show {
      top: 0;
    }
  }
  .navigation-wrapper {
    /* background-color: #0d0d0ddd; */
    background-color: #1f1f1fbb;
    /* border-bottom-left-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem; */
  }
</style>
