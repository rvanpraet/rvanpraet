---
import ScrollIcon from '@/components/ScrollIcon.astro'
import Three from '../components/Three.astro'
import Layout from '../layouts/Layout.astro'
// import GridContent from '@/components/GridContent.astro'
import ExperienceLoader from '@/components/ExperienceLoader.astro'
import InlineHighlight from '@/components/InlineHighlight.astro'
import NavMenu from '@/components/NavMenu.astro'
import SlicedLetter from '@/components/SlicedLetter.astro'
import FullpageSection from '@/components/FullpageSection.astro'
import Timeline from '@/components/Timeline.astro'

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout>
  <ExperienceLoader />
  <Three />

  <section class="introduction-dummy relative z-10 h-screen w-screen" data-model-id="0"></section>
  <section class="introduction-dummy relative z-10 h-screen w-screen" data-model-id="1"></section>
  <section class="introduction-dummy relative z-10 h-screen w-screen" data-model-id="2"></section>

  <div class="introduction-entropy relative z-10"></div>

  <FullpageSection
    class="introduction-general content-wrapper relative z-10 my-32 lg:w-screen lg:h-screen lg:my-16"
    data-model-id="3"
  >
    <h1
      id="igh"
      class="col-start-1 col-span-4 md:col-start-1 md:col-span-6 lg:row-start-4 lg:col-start-7 lg:col-span-6"
    >
      <span>AB</span><span class="mx-2"
        ><SlicedLetter className="text-green">O</SlicedLetter><span class="wave-y-2 mx-4">U</span></span
      ><InlineHighlight color="white">T</InlineHighlight>
    </h1>

    <p id="igt1" class="col-start-1 col-span-4 lg:row-start-7 lg:col-start-6 lg:col-span-6">
      I'm passionate about technology,<InlineHighlight className="mx-16" color="white"
        >I love to create.</InlineHighlight
      >Storytelling, emotion, mystery: these are the words that shape my approach to<InlineHighlight className="mx-12"
        >creativity and art.</InlineHighlight
      >I work with both<InlineHighlight className="mx-12" color="green">code and sound</InlineHighlight>as means to
      translate my vision to the world.
    </p>
    <p id="igt2" class="col-start-1 col-span-4 lg:row-start-9 lg:col-start-8 lg:col-span-5">
      Inspired by the<InlineHighlight className="mx-16" color="green">natural world</InlineHighlight>, its patterns,
      rhythms and quiet complexity often<InlineHighlight className="mx-12" color="white">find their way</InlineHighlight
      > into my work.<br />Through<InlineHighlight className="mx-12" color="red">immersion and art</InlineHighlight>I
      aim to evoke feeling,<InlineHighlight className="mx-12" color="yellow">spark</InlineHighlight>curiosity, and
      invite a<InlineHighlight className="ml-12" color="white">moment of reflection.</InlineHighlight>
    </p>
  </FullpageSection>

  <FullpageSection
    class="introduction-development content-wrapper relative z-10 my-32 lg:w-screen lg:h-screen lg:my-16"
    data-model-id="4"
  >
    <h1
      id="idh"
      class="col-start-1 col-span-4 md:col-start-1 md:col-span-6 lg:row-start-4 lg:col-start-1 lg:col-span-10"
    >
      C<SlicedLetter className="mx-4 wave-y-1 text-yellow">O</SlicedLetter>DIN<InlineHighlight color="white"
        >G</InlineHighlight
      >
    </h1>

    <p
      id="idt1"
      class="col-start-1 col-span-4 md:col-start-1 md:col-span-6 lg:row-start-7 lg:col-start-1 lg:col-span-6"
    >
      I'm a <InlineHighlight className="mx-8" color="white">developer</InlineHighlight> with a focus on building interactive
      and engaging digital experiences. My work ranges from <InlineHighlight className="mx-8"
        >web development</InlineHighlight
      > to <InlineHighlight className="mx-8" color="green">creative coding</InlineHighlight> for installations and art.
    </p>

    <p
      id="idt2"
      class="col-start-1 col-span-4 md:col-start-1 md:col-span-6 lg:row-start-8 lg:col-start-3 lg:col-span-5"
    >
      I use modern tools and frameworks to bring <InlineHighlight className="mx-12" color="white">ideas</InlineHighlight
      > to life—whether it's a <InlineHighlight className="ml-8" color="yellow">responsive website</InlineHighlight>
      <InlineHighlight className="mx-8" color="green">visual experiment</InlineHighlight> or <InlineHighlight
        className="mx-8"
        color="red">immersive piece.</InlineHighlight
      > I enjoy <InlineHighlight className="mx-8" color="white">exploring</InlineHighlight> the intersection of code, design,
      and user experience.
    </p>
  </FullpageSection>

  <Timeline
    data-model-id="5"
    class="introduction-xp relative z-10"
    items={[
      {
        dateFrom: '2024',
        dateTo: 'Current',
        title: 'Freelance',
        subtitle: 'Creative Developer - Sound Designer - Immersive Artist',
        description:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam egestas odio et libero consequat placerat. Integer malesuada feugiat vestibulum. Quisque tristique quam metus, a gravida odio dictum eu. Proin euismod efficitur risus, eu placerat libero fringilla nec. Pellentesque fermentum lacus et sapien porta, eu iaculis erat rhoncus. Sed non ipsum a nisi consequat eleifend. Sed eget laoreet tortor. Sed varius turpis ut ante maximus, eget pharetra dolor consectetur. Fusce nec nulla mauris. Nullam sagittis ipsum a risus ultricies, sed lacinia arcu sodales.',
      },
      {
        dateFrom: '2021',
        dateTo: '2024',
        title: 'Fabrique',
        subtitle: 'Frontend Developer',
        description:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam egestas odio et libero consequat placerat. Integer malesuada feugiat vestibulum. Quisque tristique quam metus, a gravida odio dictum eu. Proin euismod efficitur risus, eu placerat libero fringilla nec. Pellentesque fermentum lacus et sapien porta, eu iaculis erat rhoncus. Sed non ipsum a nisi consequat eleifend. Sed eget laoreet tortor. Sed varius turpis ut ante maximus, eget pharetra dolor consectetur. Fusce nec nulla mauris. Nullam sagittis ipsum a risus ultricies, sed lacinia arcu sodales.',
      },
      {
        dateFrom: '2020',
        dateTo: '2021',
        title: 'Thuisleefgroep',
        subtitle: 'Frontend Developer',
        description:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam egestas odio et libero consequat placerat. Integer malesuada feugiat vestibulum. Quisque tristique quam metus, a gravida odio dictum eu. Proin euismod efficitur risus, eu placerat libero fringilla nec. Pellentesque fermentum lacus et sapien porta, eu iaculis erat rhoncus. Sed non ipsum a nisi consequat eleifend. Sed eget laoreet tortor. Sed varius turpis ut ante maximus, eget pharetra dolor consectetur. Fusce nec nulla mauris. Nullam sagittis ipsum a risus ultricies, sed lacinia arcu sodales.',
      },
      {
        dateFrom: '2018',
        dateTo: '2020',
        title: 'Vattenfall',
        subtitle: 'Frontend Developer',
        description:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam egestas odio et libero consequat placerat. Integer malesuada feugiat vestibulum. Quisque tristique quam metus, a gravida odio dictum eu. Proin euismod efficitur risus, eu placerat libero fringilla nec. Pellentesque fermentum lacus et sapien porta, eu iaculis erat rhoncus. Sed non ipsum a nisi consequat eleifend. Sed eget laoreet tortor. Sed varius turpis ut ante maximus, eget pharetra dolor consectetur. Fusce nec nulla mauris. Nullam sagittis ipsum a risus ultricies, sed lacinia arcu sodales.',
      },
    ]}
  />
  <ScrollIcon />
</Layout>

<!-- <FullpageSection className="introduction-development-previews">
  <ProjectsPreview
    projects={[
      { href: '/', image: { src: 'https://picsum.photos/400?random=1', alt: 'picture alt' } },
      { href: '/', image: { src: 'https://picsum.photos/400?random=2', alt: 'picture alt' } },
      { href: '/', image: { src: 'https://picsum.photos/400?random=3', alt: 'picture alt' } },
    ]}
  />
</FullpageSection> -->

<!-- <FullpageSection className="introduction-new-media" data-model-id="10">
  <h1 id="inmh" class="uppercase">New Media & Immersive Installations</h1>
  <p id="inmt">
    I’m fascinated by the potential of immersive environments to blur the lines between the digital and physical. Using
    tools like TouchDesigner, it's possible to create responsive systems that connect light, sound, and movement—turning
    spaces into living, reactive experiences. These formats offer a unique way to tell stories, provoke emotion, and
    engage the senses beyond the screen.
  </p>
</FullpageSection> -->

<!-- <div class="loading"></div> -->

<script>
  import gsap from 'gsap'
  import { ScrollTrigger } from 'gsap/ScrollTrigger'

  import Lenis from 'lenis'

  const lenis = new Lenis({
    // lerp: 0.1,
    // wheelMultiplier: 0.1,
    // touchMultiplier: 0.1,
    // smoothWheel: true,
    lerp: 0.085,
    // duration: 0.5,
  })
  //   const lenis = {
  //   options: { lerp: 1 },
  //   scrollTo: (_, __) => {},
  // }

  lenis.on('scroll', (e) => {
    ScrollTrigger.update()
  })

  gsap.ticker.add((time) => {
    lenis.raf(time * 1000)
  })

  // const lenis = {
  //   options: { lerp: 1 },
  //   scrollTo: (_, __) => {},
  // }

  const MAX_ENTROPY = 0.01
  window.entropy = 0

  // document.addEventListener('DOMContentLoaded', () => {
  //   lenis.scrollTo(document.documentElement, {
  //     offset: 0,
  //     immediate: true,
  //   })
  // })

  gsap.registerPlugin(ScrollTrigger)

  // Only start building scroll listeners when the THREE World is ready
  document.addEventListener('world-ready', () => {
    // Swap model function
    function swapModel(targetId: string | number) {
      const swapModelEvent = new CustomEvent('swap-target', {
        detail: {
          targetId: typeof targetId === 'string' ? parseInt(targetId) : targetId,
        },
      })
      document.dispatchEvent(swapModelEvent)
    }

    // Elements
    const introductionSections = document.querySelectorAll('.introduction-dummy')
    const entropyEl: HTMLElement = document.querySelector('.introduction-entropy')
    const generalEl: HTMLElement = document.querySelector('.introduction-general')
    const devEl: HTMLElement = document.querySelector('.introduction-development')
    const xpEl: HTMLElement = document.querySelector('.introduction-xp')

    // Inline Elements per section
    const generalInlines = generalEl.querySelectorAll('.inline-highlight')
    const devInlines = devEl.querySelectorAll('.inline-highlight')

    // Intro slide scrolltriggers for each TRHEE.JS word
    introductionSections.forEach((section: HTMLElement) => {
      // Swap model on scroll
      ScrollTrigger.create({
        trigger: section,
        start: 'center center',
        end: '+=100%',
        onEnter: () => {
          swapModel(section.dataset.modelId)
        },
        onEnterBack: () => {
          swapModel(section.dataset.modelId)
        },
      })
    })

    // ScrollTrigger for the entropy section
    ScrollTrigger.create({
      trigger: entropyEl,
      start: 'center center',
      end: '+=175%',
      pin: true,
      // markers: {
      //   indent: 500,
      // },
      onEnter: () => {
        // lenis.options.lerp = 0.1
        // swapModel(lastIntroEl.dataset.modelId)
      },
      onEnterBack: () => {
        swapModel(2)
        // lenis.options.lerp = 0.1
      },
      onLeave: () => {
        // lenis.options.lerp = 0.1
      },
      onLeaveBack: () => {
        // lenis.options.lerp = 0.8
        swapModel(2)
      },
      onUpdate: (self) => {
        window.entropy = self.progress * MAX_ENTROPY
      },
    })

    ScrollTrigger.create({
      trigger: generalEl,
      start: 'top center',
      end: 'bottom center',
      onEnter: () => {
        window.entropy = 0
        swapModel(generalEl.dataset.modelId)
      },
      onEnterBack: () => {
        swapModel(generalEl.dataset.modelId)
      },
      onLeaveBack: () => {
        window.entropy = 1
      },
    })

    ScrollTrigger.create({
      trigger: devEl,
      start: 'top center',
      end: 'bottom center',
      onEnter: () => {
        swapModel(devEl.dataset.modelId)
      },
      onLeaveBack: () => {
        swapModel(parseInt(xpEl.dataset.modelId) - 1)
      },
      onEnterBack: () => {
        swapModel(devEl.dataset.modelId)
      },
    })

    ScrollTrigger.create({
      trigger: xpEl,
      start: 'top center+=33%',

      onEnter: () => {
        swapModel(xpEl.dataset.modelId)
      },
      onEnterBack: () => {
        swapModel(xpEl.dataset.modelId)
      },
      onLeaveBack: () => {
        swapModel(parseInt(xpEl.dataset.modelId) - 1)
      },
    })

    // Text animations with GSAP

    // const generalTL = gsap.timeline({
    //   paused: true,
    //   scrollTrigger: {
    //     trigger: generalEl,
    //     start: 'top bottom',
    //     end: '+=100%',
    //     // scrub: 0.5,
    //     onUpdate: (self) => {
    //       // Update the progress of the timeline based on the scroll position
    //       generalTL.progress(self.progress)
    //     },
    //   },
    // })
    // generalTL
    //   .fromTo('#igh', { y: -500, opacity: 0 }, { y: 0, opacity: 1, duration: 1 })
    //   .fromTo('#igt1', { y: -500, opacity: 0 }, { y: 0, opacity: 1, duration: 1 }, '<')
    //   .fromTo('#igt2', { y: -500, opacity: 0 }, { y: 0, opacity: 1, duration: 1 }, '<')
  })
</script>

<style lang="scss" is:global>
  .introduction-dummy {
    // height: 200vh !important;
  }
  .introduction-general {
    z-index: 2;
  }

  .wave-y-1 {
    display: inline-block;
    animation: 8s infinite alternate ease-in-out wave-x;
  }

  .wave-y-2 {
    display: inline-block;
    animation: 7s infinite alternate-reverse ease-in-out wave-x;
    animation-delay: 0.33s;
  }

  @keyframes wave-l {
    from {
      margin-left: -16px;
    }

    to {
      margin-left: 16px;
    }
  }

  @keyframes wave-r {
    from {
      margin-right: -16px;
    }

    to {
      margin-right: 16px;
    }
  }

  @keyframes wave-x {
    from {
      transform: translateX(-16px);
      /* margin-top: -16px; */
    }

    to {
      /* margin-top: 16px; */
      transform: translateX(16px);
    }
  }

  @keyframes wave-y {
    from {
      transform: translateY(-16px);
      /* margin-top: -16px; */
    }

    to {
      /* margin-top: 16px; */
      transform: translateY(16px);
    }
  }
</style>
